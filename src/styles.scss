/* You can add global styles to this file, and also import other style files */
@import '~@angular/material/theming';
@import '~@covalent/core/theming/all-theme';

// (optional) Additional themes
@import '~@covalent/markdown/markdown-theme';
@import '~@covalent/highlight/highlight-theme';

// Define a custom typography config that overrides the font-family
// or any typography level.
$typography: mat-typography-config(
  $font-family: 'Roboto, monospace',
  $headline: mat-typography-level(32px, 48px, 700)
);

@include mat-core($typography); // $typography is an **optional** argument for the mat-core

$primary: mat-palette($mat-orange, 800, 100, 900);
$accent:  mat-palette($mat-light-blue, 600, 100, 900);

$warn:    mat-palette($mat-red, 600, 100, 900);

$theme: mat-light-theme($primary, $accent, $warn);


// Custom typography
$custom-typography: mat-typography-config(
  $button: mat-typography-level(14px, 14px, 400)
);
$custom-toolbar-typography: mat-typography-config(
  $title: mat-typography-level(20px, 32px, 400)
);

// Include the base styles for Angular Material core. We include this here so that you only
// have to load a single css file for Angular Material in your app.
@include mat-core($custom-typography);

// Setting the toolbar to the proper spec weight
@include mat-toolbar-typography($custom-toolbar-typography);

// Manually import since we're not using platform.css
// Include the core styles for Covalent
@include covalent-core();
// Include pre-bundled material-icons
$mat-font-url: '../node_modules/@covalent/core/common/styles/font/';
@include covalent-material-icons();
// Include covalent utility classes
@include covalent-utilities();
// Include flex layout classes
@include covalent-layout();
// Include covalent color classes
@include covalent-colors();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$primary: mat-palette($mat-blue-grey, 800, 100, 900);
$accent:  mat-palette($mat-orange, 800, 100, 900);

// The warn palette is optional (defaults to red).
$warn:    mat-palette($mat-red, 600, 100, 900);

// Create the theme object (a Sass map containing all of the palettes).
$theme: mat-light-theme($primary, $accent, $warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($theme);
@include covalent-theme($theme);

// Active icon color in list nav
mat-nav-list, mat-list {
    [mat-list-item].active {
        mat-icon[matListAvatar] {
            background-color: mat-color($accent);
            color: mat-color($accent, default-contrast);
        }
        mat-icon[matListIcon] {
            color: mat-color($accent);
        }
    }
}

/* ------------------------------------------------------------------------------- */
$foreground: map-get($theme, foreground);
$background: map-get($theme, background);


@include angular-material-theme($theme);
@include covalent-theme($theme, $typography); // $typography is an **optional** argument for the covalent-theme

// (optional) Additional themes
@include covalent-markdown-theme($theme);
@include covalent-highlight-theme();

.mat-icon {
  &.mat-icon-logo {
    position: relative;
    top: -2px;
  }
}

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

// 1. Your custom variables and variable overwrites.
$global-link-color: #DA7D02;

// 2. Import default variables and available mixins.
@import "uikit/src/scss/variables-theme.scss";
@import "uikit/src/scss/mixins-theme.scss";

// 3. Your custom mixin overwrites.
@mixin hook-card() { color: #000; }

// 4. Import UIkit.
@import "uikit/src/scss/uikit-theme.scss";
@import "./themes/corpayande.scss";

em {
  color: #000;
}